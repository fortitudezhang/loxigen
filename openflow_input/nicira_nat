// Copyright 2013, Big Switch Networks, Inc.
//
// LoxiGen is licensed under the Eclipse Public License, version 1.0 (EPL), with
// the following special exception:
//
// LOXI Exception
//
// As a special exception to the terms of the EPL, you may distribute libraries
// generated by LoxiGen (LoxiGen Libraries) under the terms of your choice, provided
// that copyright and licensing notices generated by LoxiGen are not altered or removed
// from the LoxiGen Libraries and the notice provided below is (i) included in
// the LoxiGen Libraries, if distributed in source code form and (ii) included in any
// documentation for the LoxiGen Libraries, if distributed in binary form.
//
// Notice: "Copyright 2013, Big Switch Networks, Inc. This library was generated by the LoxiGen Compiler."
//
// You may not use this file except in compliance with the EPL or LOXI Exception. You may obtain
// a copy of the EPL at:
//
// http://www.eclipse.org/legal/epl-v10.html
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// EPL for the specific language governing permissions and limitations
// under the EPL.

#version any

enum of_nx_nat_flags(wire_type=uint16_t, bitmask=True) {
     OFP_NX_NAT_F_SRC = 0x1,
     OFP_NX_NAT_F_DST = 0x2,
     OFP_NX_NAT_F_PERSISTENT = 0x4,
     OFP_NX_NAT_F_PROTO_HASH = 0x8,
     OFP_NX_NAT_F_PROTO_RANDOM = 0x10,
};

// According to the OF standard, experimenter actions should always padded
// to 8 Bytes.
struct of_action_nicira_nat(align=8, length_includes_align=True) : of_action_nicira {
    uint16_t type == 65535;
    uint16_t len;
    uint32_t experimenter == 0x2320;
    uint16_t subtype == 36;
    pad(2);                     /* Must be zero. */
    enum of_nx_nat_flags flags; /* Zero or more NX_NAT_F_* flags.
                                 * Unspecified flag bits must be zero. */
    uint16_t range_present;     /* NX_NAT_RANGE_* */
    /* Followed by optional parameters as specified by 'range_present' */
    list(of_uint8_t) options;    
};